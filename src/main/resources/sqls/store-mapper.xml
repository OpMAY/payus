<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mvsolutions.payus.mapper.StoreMapper">
    <select id="getStoreListForMain" resultType="MainPageStore">
        select store_no,
               class_first,
               name,
               payback_rate,
               thumbnail,
               star_rate,
               review_num,
               (6371 * acos(cos(radians(#{y})) * cos(radians(address_y)) * cos(radians(address_x) - radians(#{x})) +
                            sin(radians(#{y})) * sin(radians(address_y))))
                   AS dist
        from store
        HAVING dist <![CDATA[<=]]> 100
           AND class_first = #{class_first}
        ORDER BY dist
        LIMIT 10
    </select>
    <select id="getStoreListForMainReload" resultType="MainPageStore">
        select store_no,
               class_first,
               name,
               payback_rate,
               thumbnail,
               star_rate,
               review_num,
               (6371 * acos(cos(radians(#{y})) * cos(radians(address_y)) * cos(radians(address_x) - radians(#{x})) +
                            sin(radians(#{y})) * sin(radians(address_y))))
                   AS dist
        from store
        HAVING ((dist <![CDATA[>]]> #{distance} AND dist <![CDATA[<=]]> 100 AND class_first = #{class_first})
            OR (store_no <![CDATA[<]]> #{last_index} AND (dist <![CDATA[>]]> #{distance} AND dist <![CDATA[<=]]> 100) AND
                class_first = #{class_first}))
        ORDER BY dist
        LIMIT 10
    </select>
    <select id="getDistanceOfLastIndex" resultType="_double">
        select (6371 * acos(cos(radians(#{y})) * cos(radians(address_y)) * cos(radians(address_x) - radians(#{x})) +
                            sin(radians(#{y})) * sin(radians(address_y))))
                   AS dist
        from store
        WHERE store_no = #{last_index}
    </select>
    <select id="checkStoreExists" resultType="_boolean">
        select EXISTS(select * from store WHERE store_no = #{last_index})
    </select>
    <insert id="insertStore" useGeneratedKeys="true" keyProperty="store_no">
        insert into store(vendor_no, class_first, class_second, name, payback_rate, thumbnail, star_rate, `explain`,
                          phone, address, address_x, address_y, address_1depth, address_2depth, address_3depth,
                          address_short, address_road, review_num, store_private, image_list, reg_date)
        VALUES (#{vendor_no}, #{class_first}, #{class_second}, #{name}, #{payback_rate}, #{thumbnail}, #{star_rate},
                #{explain}, #{phone}, #{address}, #{address_x}, #{address_y}, #{address_1depth}, #{address_2depth},
                #{address_3depth}, #{address_short}, #{address_road}, #{review_num}, #{store_private}, #{img_list},
                #{reg_date})
    </insert>
</mapper>