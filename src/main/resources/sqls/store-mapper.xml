<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mvsolutions.payus.mapper.StoreMapper">
    <resultMap id="StoreDetailPageResponse"
               type="com.mvsolutions.payus.model.rest.response.storedetailpage.StoreDetailPageResponse">
        <result column="image_list" property="image_list" typeHandler="com.mvsolutions.payus.handler.JsonTypeHandler"/>
    </resultMap>
    <select id="getStoreListForMain" resultType="MainPageStore">
        select store.store_no,
               class_first,
               name,
               IF(EXISTS(select *
                         from advertisement_store
                         WHERE advertisement_store.store_no = store.store_no
                           AND status = true), advertise_payback,
                  payback_rate) as payback_rate,
               thumbnail,
               star_rate,
               review_num,
               (6371 * acos(cos(radians(#{y})) * cos(radians(address_y)) * cos(radians(address_x) - radians(#{x})) +
                            sin(radians(#{y})) * sin(radians(address_y))))
                                AS dist
        from store
                 left join advertisement_store on store.store_no = advertisement_store.store_no
        HAVING dist <![CDATA[<=]]> 100
           AND class_first = #{class_first}
        ORDER BY dist
        LIMIT 10
    </select>
    <select id="getStoreListForMainReload" resultType="MainPageStore">
        select store.store_no,
               class_first,
               name,
               IF(EXISTS(select *
                         from advertisement_store
                         WHERE advertisement_store.store_no = store.store_no
                           AND status = true), advertise_payback,
                  payback_rate) as payback_rate,
               thumbnail,
               star_rate,
               review_num,
               (6371 * acos(cos(radians(#{y})) * cos(radians(address_y)) * cos(radians(address_x) - radians(#{x})) +
                            sin(radians(#{y})) * sin(radians(address_y))))
                                AS dist
        from store
                 left join advertisement_store on store.store_no = advertisement_store.store_no
        HAVING ((dist <![CDATA[>]]> #{distance} AND dist <![CDATA[<=]]> 100 AND class_first = #{class_first})
            OR (store.store_no <![CDATA[<]]> #{last_index} AND (dist <![CDATA[>]]> #{distance} AND dist <![CDATA[<=]]> 100) AND
                class_first = #{class_first}))
        ORDER BY dist
        LIMIT 10
    </select>
    <select id="getDistanceOfLastIndex" resultType="_double">
        select (6371 * acos(cos(radians(#{y})) * cos(radians(address_y)) * cos(radians(address_x) - radians(#{x})) +
                            sin(radians(#{y})) * sin(radians(address_y))))
                   AS dist
        from store
        WHERE store_no = #{last_index}
    </select>
    <select id="checkStoreExists" resultType="_boolean">
        select EXISTS(select * from store WHERE store_no = #{last_index})
    </select>
    <insert id="insertStore" useGeneratedKeys="true" keyProperty="store_no">
        insert into store(vendor_no, class_first, class_second, name, payback_rate, thumbnail, star_rate, `explain`,
                          phone, address, address_x, address_y, address_1depth, address_2depth, address_3depth,
                          address_short, address_road, review_num, store_private, image_list, reg_date)
        VALUES (#{vendor_no}, #{class_first}, #{class_second}, #{name}, #{payback_rate}, #{thumbnail}, #{star_rate},
                #{explain}, #{phone}, #{address}, #{address_x}, #{address_y}, #{address_1depth}, #{address_2depth},
                #{address_3depth}, #{address_short}, #{address_road}, #{review_num}, #{store_private}, #{img_list},
                #{reg_date})
    </insert>
    <select id="getStorePaybackData" resultType="PointStoreDataResponse">
        SET @Point = (select point
                      from vendor
                      WHERE vendor_no = #{vendor_no});
        select store_no, payback_rate, @Point as point
        from store
        WHERE vendor_no = #{vendor_no}
    </select>
    <select id="getStoreListForSubMain" resultType="SubMainPageStoreResponse">
        select store.store_no,
        class_first,
        class_second,
        name,
        IF(EXISTS(select *
        from advertisement_store
        WHERE advertisement_store.store_no = store.store_no AND status = true), advertise_payback,
        payback_rate) as payback_rate,
        address_short,
        payback_rate,
        star_rate,
        review_num,
        thumbnail
        from store left join advertisement_store on store.store_no = advertisement_store.store_no
        WHERE (6371 * acos(cos(radians(#{y})) * cos(radians(address_y)) * cos(radians(address_x) - radians(#{x})) +
        sin(radians(#{y})) * sin(radians(address_y)))) <![CDATA[<=]]> 100
        AND class_first = #{class_first}
        <if test="class_second != 0">AND class_second = #{class_second}</if>
        <choose>
            <when test="order_type = 1">
                ORDER BY store.star_rate DESC, store_no DESC, reg_date DESC
            </when>
            <when test="order_type = 2">
                ORDER BY payback_rate DESC, store_no DESC, reg_date DESC
            </when>
            <when test="order_type = 3">
                ORDER BY store.review_num DESC, store_no DESC, reg_date DESC
            </when>
        </choose>
        LIMIT 10
    </select>
    <select id="getStoreListForSubMainReload" resultType="SubMainPageStoreResponse">
        select store.store_no,
        class_first,
        class_second,
        name,
        IF(EXISTS(select *
        from advertisement_store
        WHERE advertisement_store.store_no = store.store_no AND status = true), advertise_payback,
        payback_rate) as payback_rate,
        address_short,
        payback_rate,
        star_rate,
        review_num,
        thumbnail
        from store left join advertisement_store on store.store_no = advertisement_store.store_no
        WHERE (6371 * acos(cos(radians(#{y})) * cos(radians(address_y)) * cos(radians(address_x) - radians(#{x})) +
        sin(radians(#{y})) * sin(radians(address_y)))) <![CDATA[<=]]> 100
        AND class_first = #{class_first}
        <if test="class_second != 0">AND class_second = #{class_second}</if>
        <choose>
            <when test="order_type = 1">
                ORDER BY store.star_rate DESC, store_no DESC, reg_date DESC
            </when>
            <when test="order_type = 2">
                ORDER BY payback_rate DESC, store_no DESC, reg_date DESC
            </when>
            <when test="order_type = 3">
                ORDER BY store.review_num DESC, store_no DESC, reg_date DESC
            </when>
        </choose>
        LIMIT 10
    </select>
    <select id="searchByKeywords" resultType="StoreKeywordSearchResponse">
        <if test="last_index != 0">
            SET @LastDist = (select (6371 * acos(cos(radians(#{y})) * cos(radians(address_y)) * cos(radians(address_x) -
            radians(#{x})) +
            sin(radians(#{y})) * sin(radians(address_y)))) as dist from store WHERE store_no = #{last_index});
        </if>
        select store.store_no,
        name,
        IF(EXISTS(select *
        from advertisement_store
        WHERE advertisement_store.store_no = store.store_no AND status = true), advertise_payback,
        payback_rate) as payback_rate,
        thumbnail,
        address_short,
        star_rate,
        review_num,
        class_first,
        (6371 * acos(cos(radians(#{y})) * cos(radians(address_y)) * cos(radians(address_x) - radians(#{x})) +
        sin(radians(#{y})) * sin(radians(address_y)))) as dist
        from store left join advertisement_store on store.store_no = advertisement_store.store_no
        WHERE name like #{keyword}
        OR address like #{keyword}
        OR address_road like #{keyword}
        <if test="last_index != 0">
            AND ((6371 * acos(cos(radians(#{y})) * cos(radians(address_y)) * cos(radians(address_x) - radians(#{x})) +
            sin(radians(#{y})) * sin(radians(address_y)))) <![CDATA[>]]> @LastDist OR ((6371 * acos(cos(radians(#{y})) *
            cos(radians(address_y)) * cos(radians(address_x) - radians(#{x})) +
            sin(radians(#{y})) * sin(radians(address_y)))) <![CDATA[=]]> @LastDist AND store_no <![CDATA[<]]>
            #{last_index}))
        </if>
        ORDER BY dist, store_no DESC
        LIMIT 10
    </select>
    <select id="searchByMap" resultType="StoreMapSearchResponse">
        select store.store_no,
               name,
               class_first,
               address_short,
               IF(EXISTS(select *
                         from advertisement_store
                         WHERE advertisement_store.store_no = store.store_no
                           AND status = true), advertise_payback,
                  payback_rate)                                            as payback_rate,
               thumbnail,
               star_rate,
               review_num,
               address_x,
               address_y,
               (6371 * acos(cos(radians(#{y})) * cos(radians(address_y)) * cos(radians(address_x) - radians(#{x})) +
                            sin(radians(#{y})) * sin(radians(address_y)))) as dist
        from store
                 left join advertisement_store on store.store_no = advertisement_store.store_no
        WHERE (6371 * acos(cos(radians(#{y})) * cos(radians(address_y)) * cos(radians(address_x) - radians(#{x})) +
                           sin(radians(#{y})) * sin(radians(address_y)))) <![CDATA[<=]]> 10
        ORDER BY dist
    </select>
    <select id="getStoreDetailPage" resultType="StoreDetailPageResponse" resultMap="StoreDetailPageResponse">
        select store.store_no,
               class_first,
               class_second,
               IF(EXISTS(select *
                         from advertisement_store
                         WHERE advertisement_store.store_no = store.store_no
                           AND status = true), advertise_payback,
                  payback_rate)                                            as payback_rate,
               name,
               star_rate,
               `explain`,
               phone,
               address,
               address_road,
               address_x,
               address_y,
               review_num,
               image_list,
               (6371 * acos(cos(radians(#{y})) * cos(radians(address_y)) * cos(radians(address_x) - radians(#{x})) +
                            sin(radians(#{y})) * sin(radians(address_y)))) as distance
        from store
                 left join advertisement_store on store.store_no = advertisement_store.store_no
        WHERE store.store_no = #{store_no}
    </select>
    <update id="updateStoreByReview">

    </update>
</mapper>